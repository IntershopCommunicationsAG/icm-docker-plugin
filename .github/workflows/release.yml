# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Run release build from tag

on:
  push:
    tags:
      - '*'

jobs:
  release:
    environment: CIRelease
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --all --tag
      - name: Run gradle 1
        run: ./gradlew assemble
      - name: Create gradle sproperties
        env:
          APIKEY: ${{ secrets.APIKEY }}
          APISECRET: ${{ secrets.APISECRET }}
        run: echo -e "gradle.publish.key=$APIKEY\ngradle.publish.secret=$APISECRET" > $HOME/.gradle/gradle.properties
      - name: Run docker login
        run: echo ${{ secrets.DOCKERPASSWD }} | docker login -u ${{ secrets.DOCKERUSER }} --password-stdin
      - name: Run ish docker login
        run: echo ${{ secrets.ISDOCKERPASSWD }} | docker login -u ${{ secrets.ISDOCKERUSER }} --password-stdin docker.intershop.de
      - name: Create Test container
        run: cd testdocker && ./createimage.sh && cd ..
      - name: Run gradle release
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
          JAVA_OPTS: "-Xmx1024M -XX:MaxPermSize=512M -XX:ReservedCodeCacheSize=512M"
          GRADLE_OPTS: "-Dorg.gradle.daemon=true"
        run: ./gradlew -PrunOnCI=true test build :bintrayUpload :publishPlugins -s --scan
      - name: Post Build
        run: rm -f $HOME/.gradle/gradle.properties && rm -f $HOME/.docker/config.json
